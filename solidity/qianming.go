package main

import (
	"fmt"
	"pdx-chain/crypto"
)

//计算方法签名
func main() {

	data := fmt.Sprintf("%x","1")
	sum:=(63-len(data))/2
	a:=make([]byte,0)
	for i:=0;i<=sum;i++{
		a=append(a,byte(0))
	}
	//fmt.Println(fmt.Sprintf("%x",a))
	fmt.Println(fmt.Sprintf("%x",a)+data)
	//data1:=strings.Join(a,"")+data
	//fmt.Println(fmt.Sprintf("%x",data1))
	fmt.Println("0000000000000000000000000000000000000000000000000000000000000001")
	fmt.Println("6500000000000000000000000000000000000000000000000000000000000000")
	fmt.Println("0000000000000000000000000000000000000000000000000000000000000020")

}

func signFun(funS string) string {
	//0x841321fd000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000013100000000000000000000000000000000000000000000000000000000000000
	//0x841321fd000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000016500000000000000000000000000000000000000000000000000000000000000
	//
	keccak256 := crypto.Keccak256([]byte(funS))
	return fmt.Sprintf("%x",keccak256[:4])
}

